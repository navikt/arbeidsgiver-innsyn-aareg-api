name: Bygg og deploy master

on:
  push:
    branches:
      - 'master'

env:
  IMAGE_BASE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}
  IMAGE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}:${{ github.sha }}
jobs:
  bygg:
    name: Bygg
    runs-on: ubuntu-latest
    steps:
      - name: Lukk deployment-issues
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['deploy']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });

      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Hent tag
        run: echo "TAG=$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Oppsett Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Gjenopprett Maven-cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Bygg og test med Maven
        run: mvn -f ./pom.xml clean test package
        env:
          GITHUB_USERNAME: x-access-token


     - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}
            ${{ env.IMAGE_BASE }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_BASE }}:latest
          cache-to: type=inline

  deploy-dev:
    name: Deploy til dev
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/dev-fss.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy til prod
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - name: Deploy til prod-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/prod-fss.yaml
          PRINT_PAYLOAD: true

  deploy-labs-gcp:
    name: Deploy til labs
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - name: Deploy til labs-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: nais/labs-gcp.yaml
          PRINT_PAYLOAD: true